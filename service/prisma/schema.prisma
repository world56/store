// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider             = "prisma-client-js"
  referentialIntegrity = "prisma"
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_MYSQL_URL")
  referentialIntegrity = "prisma"
}

generator js {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity", "interactiveTransactions"]
}

// ***********************公共****************************

// 静态资源
model Files {
  id                Int               @id() @default(autoincrement())
  path              String            @db.Char(100) // 文件地址
  name              String            @db.Char(100) // 文件名称
  type              Int               @db.Int() // 文件类型
  createTime        DateTime?         @default(now()) @map("create_time")
  userId            Int               @map("user_id") @db.Int() // 上传人id 
  supplierId        Int?              @map("supplier_id") @db.Int() // 供应商附件
  supplierProductId Int?              @map("supplier_product_id") @db.Int() // 供应产品
  user              AdminUser         @relation(fields: [userId], references: [id])
  supplier          PurchaseSupplier? @relation(fields: [supplierId], references: [id])
  supplierProduct   SupplierProduct?  @relation(fields: [supplierProductId], references: [id])

  @@index([name])
  @@index([type])
  @@index([userId])
  @@index([supplierId])
  @@index([supplierProductId])
  @@map("files")
}

// 类目管理（字典）
model Categorys {
  id               Int                @id() @default(autoincrement())
  name             String             @db.VarChar(20)
  type             String             @db.VarChar(30)
  remark           String?            @db.VarChar(255) // 备注
  logisticsCompany PurchaseOrder[]
  supplier         PurchaseSupplier[] // 供应商 供应产品类型
  supplierProduct  SupplierProduct[] // 供应产品类型
  brands           SupplierProduct[]  @relation(name: "rel_product_brand") // 供应产品库品牌
  unitOfMeasure    SupplierProduct[]  @relation(name: "rel_product_unit") // 产品计量单位

  @@index([name])
  @@index([type])
  @@map("category")
}

// ***********************系统模块****************************

// 管理系统用户
model AdminUser {
  id                   Int                 @id @default(autoincrement())
  avatar               String?             @db.VarChar(100)
  account              String              @unique @db.VarChar(50) // 账号
  password             String              @db.VarChar(100) // 密码
  name                 String              @db.Char(5) // 名称
  phone                String              @db.Char(11) // 联系电话
  email                String?             @db.VarChar(100) // 电子邮箱地址
  status               Int                 @default(1) @db.Int() // 状态
  isSuper              Int                 @default(0) @map("is_super") @db.Int() // 是否为超管 
  remark               String?             @db.VarChar(255) // 备注
  createTime           DateTime            @default(now()) @map("create_time") @db.Timestamp(6) // 创建时间
  roles                Role[]
  departments          Department[]
  files                Files[]
  purchaseOrder        PurchaseOrder[]
  warehousePosition    WarehousePosition[]
  inventoryAudit       InventoryAudit[]
  warehousingInspector Warehousing[]       @relation(name: "rel_warehousing_creator")
  warehousingCreator   Warehousing[]       @relation(name: "rel_warehousing_inspector")

  @@index([account])
  @@index([name])
  @@index([phone])
  @@index([status])
  @@index([isSuper])
  @@index([password])
  @@map("admin_user")
}

// 角色
model Role {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(20) // 角色名称
  status      Int          @default(1) @db.Int() // 状态
  createTime  DateTime?    @default(now()) @map("create_time") @db.Timestamp(6) // 创建时间
  remark      String?      @db.VarChar(255) // 备注
  users       AdminUser[]
  permissions Permission[]

  @@index([name])
  @@index([status])
  @@map("role")
}

// 权限点
model Permission {
  id       Int     @id @default(autoincrement()) // 权限英文名称
  code     String  @unique @db.VarChar(20) // 权限英文名称
  name     String  @unique() @db.VarChar(20) // 权限名称
  parentId Int?    @map("parent_id") // 所属模块
  status   Int     @default(1) @db.Int() // 状态
  type     Int     @db.Int() // 类型 页面:1 按钮:2 内容:3
  remark   String? @db.VarChar(255) // 备注
  roles    Role[]

  @@index([code])
  @@index([name])
  @@index([status])
  @@map("permission")
}

// 部门
model Department {
  id       Int         @id @default(autoincrement())
  name     String      @unique @db.VarChar(15)
  remark   String?     @db.VarChar(255) // 备注
  parentId Int?        @map("parent_id") // 所属部门
  users    AdminUser[]

  @@index([id])
  @@index([name])
  @@index([parentId])
  @@map("department")
}

// ***********************采购****************************

// 产品规格模板
model ProductSpec {
  id         Int                    @id() @default(autoincrement())
  name       String                 @unique() @db.VarChar(20)
  remark     String?                @db.VarChar(255) // 备注
  status     Int                    @default(1) @db.Int() // 状态
  createTime DateTime?              @default(now()) @map("create_time")
  parameter  ProductSpecParameter[]

  @@index([name])
  @@map("product_spec")
}

model ProductSpecParameter {
  id         Int       @id() @default(autoincrement())
  name       String    @unique() @db.VarChar(20)
  remark     String?   @db.VarChar(255) // 备注
  createTime DateTime? @default(now()) @map("create_time")

  spec                 ProductSpec[]
  supplierProduct      RelPurchaseProductOnSpec[]
  purchaseOrderProduct PurchaseOrderProduct[] // 采购参数

  @@index([name])
  @@map("product_spec_parameter")
}

// 供应商
model PurchaseSupplier {
  id         Int      @id() @default(autoincrement())
  name       String   @unique @db.VarChar(32)
  remark     String?  @db.VarChar(255) // 备注
  status     Int      @default(1) @db.Int() // 状态
  phone      String   @db.Char(11)
  address    String   @db.VarChar(80)
  createTime DateTime @default(now()) @map("create_time")

  files          Files[]
  category       Categorys[]
  contacts       PurchaseSupplierContacts[]
  purchaseOrders PurchaseOrder[]
  product        RelSupplierOnProduct[]

  @@index([name])
  @@map("purchase_supplier")
}

// model PurchaseSupplierPaymentAccountNo {
//   id            Int     @id() @default(autoincrement())
//   type          Int     @db.Int()
//   alipay        String? @db.VarChar(50)
//   name          String  @db.VarChar(20)
//   accountNumber String? @map("account_number") @db.VarChar(50)
//   bankId        Int     @db.Int()

//   bank Categorys? @relation(fields: [bankId], references: [id])

//   @@index([type])
//   @@index([bankId])
//   @@map("_rel_purchase_supplier_payment_account_no")
// }

model PurchaseSupplierContacts {
  id         Int     @id() @default(autoincrement())
  name       String  @db.VarChar(32)
  phone      String  @db.Char(11) // 联系电话
  remark     String? @db.VarChar(255) // 备注
  supplierId Int     @map("supplier_id") @db.Int()

  supplier PurchaseSupplier @relation(fields: [supplierId], references: [id])

  @@index([name])
  @@index([phone])
  @@index([supplierId])
  @@map("purchase_supplier_contacts")
}

model RelPurchaseProductOnSpec {
  id                Int     @id() @default(autoincrement())
  specParameterId   Int     @map("spec_parameter_id") @db.Int()
  supplierProductId Int     @map("supplier_product_id") @db.Int()
  deleted           Boolean @default(false)

  supplierProduct SupplierProduct      @relation(fields: [supplierProductId], references: [id])
  specParameter   ProductSpecParameter @relation(fields: [specParameterId], references: [id])

  @@unique([specParameterId, supplierProductId])
  @@index([specParameterId])
  @@index([supplierProductId])
  @@map("_rel_purchase_product_on_spec_parameter")
}

// 供应商产品
model SupplierProduct {
  id         Int       @id() @default(autoincrement())
  name       String    @db.VarChar(100)
  status     Int       @default(1) @db.Int() // 状态
  remark     String?   @db.VarChar(255) // 备注
  createTime DateTime? @default(now()) @map("create_time")
  brandId    Int       @map("brand_id") @db.Int() // 品牌
  unitId     Int       @map("unit_id") @db.Int() // 计量单位

  unit  Categorys @relation(name: "rel_product_unit", fields: [unitId], references: [id])
  brand Categorys @relation(name: "rel_product_brand", fields: [brandId], references: [id])

  category       Categorys[] // 产品类型
  pictures       Files[] // 图片
  purchaseOrders PurchaseOrderProduct[] // 采购
  spec           RelPurchaseProductOnSpec[] // 规格
  supplier       RelSupplierOnProduct[] // 供应商

  @@index([name])
  @@index([unitId])
  @@index([status])
  @@index([brandId])
  @@map("purchase_supplier_product")
}

model RelSupplierOnProduct {
  id         Int              @id() @default(autoincrement())
  productId  Int
  supplierId Int
  deleted    Boolean          @default(false)
  product    SupplierProduct  @relation(fields: [productId], references: [id])
  supplier   PurchaseSupplier @relation(fields: [supplierId], references: [id])

  @@unique([productId, supplierId])
  @@index([productId])
  @@index([supplierId])
  @@map("_rel_supplier_on_product")
}

// 采购订单
model PurchaseOrder {
  id                 Int       @id @default(autoincrement())
  no                 String    @unique // 流水序列号
  estimatedDate      DateTime? @map("estimated_date") @db.DateTime() // 预期抵达时间
  settlement         Int       @db.Int() // 结算方式
  shippingMethod     Int       @map("shipping_method") @db.Int() // 运输方式
  shippingNoteNumber String?   @map("shipping_note_number") @db.VarChar(30) // 运输单号
  createTime         DateTime? @default(now()) @map("create_time")
  remark             String?   @db.VarChar(255) // 备注
  creatorId          Int       @map("creator_id") @db.Int() // 创建人
  supplierId         Int       @map("supplier_id") @db.Int() // 供应商
  logisticsCompanyId Int?      @map("logistics_company_id") @db.Int() // 物流公司

  total            Int // 商品总数
  totalPrice       BigInt  @map("total_price")
  actualTotal      Int?    @map("actual_total") // 实际总数
  actualTotalPrice BigInt? @map("actual_total_price") // 总价格

  creator          AdminUser              @relation(fields: [creatorId], references: [id])
  supplier         PurchaseSupplier       @relation(fields: [supplierId], references: [id])
  logisticsCompany Categorys?             @relation(fields: [logisticsCompanyId], references: [id])
  products         PurchaseOrderProduct[]
  warehousing      Warehousing?

  @@index([creatorId])
  @@index([supplierId])
  @@index([estimatedDate])
  @@index([shippingMethod])
  @@index([shippingNoteNumber])
  @@map("purchase_order")
}

// 采购订单产品
model PurchaseOrderProduct {
  id             Int     @id() @default(autoincrement())
  quantity       Int     @db.Int() // 采购数量
  actualQuantity Int?    @map("actual_quantity") @db.Int() // 实际数量
  unitPrice      BigInt  @map("unit_price") @db.BigInt // 单价 (分)
  remark         String? @db.VarChar(255) // 备注
  specId         Int     @map("spec_id") @db.Int() // 规格
  productId      Int     @map("product_id") @db.Int()
  productOrderId Int     @map("product_order_id")
  supplierId     Int     @map("supplier_id")

  spec          ProductSpecParameter @relation(fields: [specId], references: [id])
  product       SupplierProduct      @relation(fields: [productId], references: [id])
  purchaseOrder PurchaseOrder        @relation(fields: [productOrderId], references: [id])

  @@index([productId])
  @@map("purchase_order_product")
}

// ***********************货仓****************************

// 待入库
model Warehousing {
  id          Int       @id() @default(autoincrement())
  no          String    @unique // 流水序列号
  orderId     Int       @unique() @map("order_id") @db.Int()
  inspectorId Int?      @map("inspector_id") @db.Int()
  creatorId   Int       @map("creator_id") @db.Int()
  updateTime  DateTime?
  createTime  DateTime? @default(now()) @map("create_time")
  type        Int       @db.Int()
  status      Int       @db.Int()
  remark      String?   @db.VarChar(255) // 备注

  order     PurchaseOrder   @relation(fields: [orderId], references: [id])
  creator   AdminUser       @relation(name: "rel_warehousing_creator", fields: [creatorId], references: [id])
  inspector AdminUser?      @relation(name: "rel_warehousing_inspector", fields: [inspectorId], references: [id])
  audit     InventoryAudit?

  @@index([no])
  @@index([orderId])
  @@index([creatorId])
  @@index([inspectorId])
  @@index([createTime])
  @@map("warehouseing")
}

// 库存审核
model InventoryAudit {
  id         Int       @id() @default(autoincrement())
  status     Int       @default(0) @db.Int()
  auditTime  DateTime? @default(now()) @map("audit_time") @db.Timestamp(6)
  createTime DateTime  @map("create_time") @db.Timestamp(6)
  remark     String?   @db.VarChar(255)
  type       Int       @default(0) @db.Int()

  operatorId     Int @map("operator_id") @db.Int()
  warehouseingId Int @unique() @map("warehousing_id") @db.Int()

  operator     AdminUser   @relation(fields: [operatorId], references: [id])
  warehouseing Warehousing @relation(fields: [warehouseingId], references: [id])

  @@index([status])
  @@index([operatorId])
  @@index([warehouseingId])
  @@map("inventory_audit")
}

// 仓位位置
model WarehousePosition {
  id       Int       @id() @default(autoincrement())
  name     String    @unique @db.VarChar(32)
  status   Int?      @default(1) @db.Int()
  remark   String?   @db.VarChar(255) // 备注
  personId Int       @map("person_id") @db.Int()
  person   AdminUser @relation(fields: [personId], references: [id])

  @@index([name])
  @@index([personId])
  @@map("warehouse_position")
}
