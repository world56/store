// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider             = "prisma-client-js"
  referentialIntegrity = "prisma"
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_MYSQL_URL")
  referentialIntegrity = "prisma"
}

generator js {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity", "interactiveTransactions"]
}

// ***********************公共****************************

// 静态资源
model Files {
  id         Int                       @id() @default(autoincrement())
  path       String                    @db.Char(100) // 文件地址
  name       String                    @db.Char(100) // 文件名称
  type       Int                       @db.Int() // 文件类型
  createTime DateTime?                 @default(now()) @map("create_time")
  userId     Int                       @map("user_id") @db.Int() // 上传人id 
  user       AdminUser                 @relation(fields: [userId], references: [id])
  supplier   PurchaseSupplier[]
  products   PurchaseSupplierProduct[] // 仓库、采购产品

  @@index([name])
  @@index([type])
  @@index([userId])
  @@map("files")
}

// 类目管理（字典）
model Categorys {
  id              Int                       @id() @default(autoincrement())
  name            String                    @db.VarChar(20)
  type            String                    @db.VarChar(30)
  remark          String?                   @db.VarChar(255) // 备注
  supplier        PurchaseSupplier[] // 供应商 供应产品类型
  supplierProduct PurchaseSupplierProduct[] // 供应产品类型
  brands          PurchaseSupplierProduct[] @relation(name: "rel_product_brand") // 供应产品库品牌
  unitOfMeasure   PurchaseSupplierProduct[] @relation(name: "rel_product_unit") // 产品计量单位

  @@index([name])
  @@index([type])
  @@map("category")
}

// ***********************系统模块****************************

// 管理系统用户
model AdminUser {
  id         Int      @id @default(autoincrement())
  avatar     String?  @db.VarChar(100)
  account    String   @unique @db.VarChar(50) // 账号
  password   String   @db.VarChar(100) // 密码
  name       String   @db.Char(5) // 名称
  phone      String   @db.Char(11) // 联系电话
  email      String?  @db.VarChar(100) // 电子邮箱地址
  status     Int      @default(1) @db.Int() // 状态
  isSuper    Int      @default(0) @map("is_super") @db.Int() // 是否为超管 
  remark     String?  @db.VarChar(255) // 备注
  createTime DateTime @default(now()) @map("create_time") @db.Timestamp(6) // 创建时间

  files             Files[]
  warehousePosition WarehousePosition[]
  supplierLog       PurchaseSupplierLog[]

  @@index([account])
  @@index([name])
  @@index([phone])
  @@index([status])
  @@index([isSuper])
  @@index([password])
  @@map("admin_user")
}

model RelAdminUserRole {
  id          Int @id @default(autoincrement())
  roleId      Int @map("role_id") @db.Int()
  adminUserId Int @map("admin_user_id") @db.Int()

  @@unique([roleId, adminUserId])
  @@index([roleId])
  @@index([adminUserId])
  @@map("rel_admin_user_role")
}

// 角色
model Role {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(20) // 角色名称
  status     Int       @default(1) @db.Int() // 状态
  createTime DateTime? @default(now()) @map("create_time") @db.Timestamp(6) // 创建时间
  remark     String?   @db.VarChar(255) // 备注

  @@index([name])
  @@index([status])
  @@map("role")
}

// 权限点
model Permission {
  id       Int     @id @default(autoincrement()) // 权限英文名称
  code     String  @unique @db.VarChar(20) // 权限英文名称
  name     String  @unique() @db.VarChar(20) // 权限名称
  parentId Int?    @map("parent_id") // 所属模块
  status   Int     @default(1) @db.Int() // 状态
  type     Int     @db.Int() // 类型 页面:1 按钮:2 内容:3
  remark   String? @db.VarChar(255) // 备注


  @@index([code])
  @@index([name])
  @@index([status])
  @@map("permission")
}

model RelRolePermission {
  id           Int @id @default(autoincrement())
  roleId       Int @map("role_id") @db.Int()
  permissionId Int @map("permission_id") @db.Int()

  @@index([roleId])
  @@index([permissionId])
  @@map("rel_role_permission")
}

// 部门
model Department {
  id       Int     @id @default(autoincrement())
  name     String  @unique @db.VarChar(15)
  remark   String? @db.VarChar(255) // 备注
  parentId Int?    @map("parent_id") // 所属部门

  @@index([id])
  @@index([name])
  @@index([parentId])
  @@map("department")
}

model RelDepartmentOnAdminUser {
  id           Int @id() @default(autoincrement())
  departmentId Int @map("department_id") @db.Int()
  adminUserId  Int @map("admin_user_id") @db.Int()

  @@unique([departmentId, adminUserId])
  @@index([adminUserId])
  @@index([departmentId])
  @@map("rel_department_admin_user")
}

// ***********************采购****************************

// 产品规格
model ProductSpec {
  id         Int                    @id() @default(autoincrement())
  name       String                 @unique() @db.VarChar(20)
  remark     String?                @db.VarChar(255) // 备注
  status     Int                    @default(1) @db.Int() // 状态
  createTime DateTime?              @default(now()) @map("create_time")
  parameter  ProductSpecParameter[]

  @@index([name])
  @@map("product_spec")
}

model ProductSpecParameter {
  id         Int           @id() @default(autoincrement())
  name       String        @unique() @db.VarChar(20)
  remark     String?       @db.VarChar(255) // 备注
  createTime DateTime?     @default(now()) @map("create_time")
  spec       ProductSpec[]

  @@index([name])
  @@map("product_spec_parameter")
}

// 供应商
model PurchaseSupplier {
  id         Int      @id() @default(autoincrement())
  name       String   @unique @db.VarChar(32)
  remark     String?  @db.VarChar(255) // 备注
  status     Int      @default(1) @db.Int() // 状态
  phone      String   @db.Char(11)
  address    String   @db.VarChar(80)
  createTime DateTime @default(now()) @map("create_time")

  files    Files[]
  category Categorys[]
  log      PurchaseSupplierLog[]
  contacts PurchaseSupplierContacts[]

  @@index([name])
  @@map("purchase_supplier")
}

model PurchaseSupplierContacts {
  id     Int     @id() @default(autoincrement())
  name   String  @db.VarChar(32)
  phone  String  @db.Char(11) // 联系电话
  remark String? @db.VarChar(255) // 备注

  supplierId Int              @map("supplier_id") @db.Int()
  supplier   PurchaseSupplier @relation(fields: [supplierId], references: [id])

  @@index([name])
  @@index([phone])
  @@index([supplierId])
  @@map("purchase_supplier_contacts")
}

model PurchaseSupplierLog {
  id         Int       @id() @default(autoincrement())
  type       Int       @default(5) @db.Int() // 类型 默认“其他”
  content    String    @db.VarChar(200)
  createTime DateTime? @default(now()) @map("create_time")

  userId Int       @map("user_id") @db.Int()
  user   AdminUser @relation(fields: [userId], references: [id])

  supplierId Int              @map("supplier_id") @db.Int()
  supplier   PurchaseSupplier @relation(fields: [supplierId], references: [id])

  @@index([type])
  @@index([supplierId])
  @@map("purchase_supplier_status_log")
}

// 供应商产品库
model PurchaseSupplierProduct {
  id         Int       @id() @default(autoincrement())
  name       String    @db.VarChar(100)
  status     Int       @default(1) @db.Int() // 状态
  remark     String?   @db.VarChar(255) // 备注
  createTime DateTime? @default(now()) @map("create_time")

  unitId Int       @map("unit_id") @db.Int() // 计量单位
  unit   Categorys @relation(name: "rel_product_unit", fields: [unitId], references: [id])

  brandId Int       @map("brand_id") @db.Int() // 品牌
  brand   Categorys @relation(name: "rel_product_brand", fields: [brandId], references: [id])

  pictures Files[] // 图片
  category Categorys[] // 产品类型

  @@index([name])
  @@index([status])
  @@index([brandId])
  @@map("purchase_supplier_product")
}

// ***********************货仓****************************

// 仓位位置
model WarehousePosition {
  id     Int     @id() @default(autoincrement())
  name   String  @unique @db.VarChar(32)
  status Int?    @default(1) @db.Int()
  remark String? @db.VarChar(255) // 备注

  personId Int @map("person_id") @db.Int()

  person   AdminUser                       @relation(fields: [personId], references: [id])
  products RelProductOnWarehousePosition[]

  @@index([name])
  @@index([personId])
  @@map("warehouse_position")
}

// 产品盘点
model WarehouseProduct {
  id            Int       @id() @default(autoincrement())
  name          String    @db.VarChar(255)
  count         BigInt    @db.BigInt()
  remark        String?   @db.VarChar(255) // 备注
  alertQuantity Int       @map("alert_quantity") @db.Int()
  positionId    Int       @map("position_id") @db.Int()
  createTime    DateTime? @default(now()) @map("create_time")
  updateTime    DateTime? @updatedAt() @map("update_time")

  products RelProductOnWarehousePosition[]

  @@map("product_warehousing")
}

model RelProductOnWarehousePosition {
  id         Int @id() @default(autoincrement())
  positionId Int @map("position_id") @db.Int()
  productId  Int @map("product_id") @db.Int()

  positions WarehousePosition @relation(fields: [positionId], references: [id])
  products  WarehouseProduct  @relation(fields: [productId], references: [id])

  @@unique([positionId, productId])
  @@index([positionId])
  @@index([productId])
  @@map("rel_product_on_warehouse_position")
}
